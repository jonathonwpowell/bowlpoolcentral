{"version":3,"sources":["logo.svg","components/WinsBar.js","common/helper.js","common/api-config.js","components/PlayerList.js","components/MultiPlayer.js","components/Menu.js","App.js","common/spreadsheet.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","WinsBar","bowlPool","this","props","games","react_default","a","createElement","index_esm","width","height","chartType","loader","data","bowlPoolData","winsBarData","players","player","push","name","parseInt","wins","getWinsBarData","options","title","hAxis","minValue","vAxis","Component","api_config","apiKey","discoveryDocs","spreadsheetId","PlayerList","event","playerSearch","target","value","playerList","listItems","key","TableRow_default","TableCell_default","Toolbar_default","Typography_default","variant","id","style","flex","Input_default","placeholder","onKeyUp","handleSearch","bind","Table_default","TableHead_default","TableBody_default","React","MultiPlayer","state","selectedPlayers","handleChange","_this","setState","_this2","getResult","pick","gameKey","winners","length","backgroundColor","react_select_esm","closeMenuOnSelect","components","makeAnimated","isMulti","onChange","cells","playerName","playerWins","getHeadRow","rows","i","gameName","j","selection","picks","result","getGameRows","MyMenu","anchorEl","handleClick","currentTarget","handleClose","textContent","setPage","e","v","open","Boolean","className","IconButton_default","aria-label","aria-owns","undefined","aria-haspopup","onClick","icons_Menu_default","Menu_default","onClose","PaperProps","maxHeight","ITEM_HEIGHT","map","option","MenuItem_default","App","searchPlayerList","error","page","initClient","window","gapi","client","init","config","then","callback","onLoad","load","sheets","spreadsheets","values","get","range","response","sheet","gamesArray","createGamesList","winnersArray","createWinnersList","gamesPlayed","playerObject","playerNum","loses","label","sort","b","createPlayerList","slice","parseSheet","query","foundPlayers","filter","toLowerCase","includes","splice","components_Menu","Paper_default","components_PlayerList","components_WinsBar","components_MultiPlayer","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kNCiCzBC,mLA3BJ,IACAC,EAAYC,KAAKC,MAAjBF,SACP,OAAIA,EAASG,MACJC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACDC,MAAO,QACPC,OAAQ,SACRC,UAAU,WACVC,OAAQP,EAAAC,EAAAC,cAAA,4BACRM,KCAL,SAAwBC,GAC3B,IAAIC,EAAc,CAAC,CAAC,SAAS,SAC7B,IAAK,IAAIhB,KAAKe,EAAaE,QAAS,CAChC,IAAIC,EAASH,EAAaE,QAAQjB,GAClCgB,EAAYG,KAAK,CAACD,EAAOE,KAAKC,SAASH,EAAOI,QAElD,OAAON,EDNSO,CAAerB,GACvBsB,QAAS,CACLC,MAAO,iBACPC,MAAO,CACPD,MAAO,OACPE,SAAU,GAEVC,MAAO,CACPH,MAAO,kBAMjBnB,EAAAC,EAAAC,cAAA,mBAxBgBqB,aEJPC,EAAA,CACXC,OAAQ,0CACRC,cACE,CAAC,4DACHC,cAAe,2LCkDJC,uLAzCEC,GACThC,KAAKC,MAAMgC,aAAaD,EAAME,OAAOC,wCAIhC,IACGC,EAAepC,KAAKC,MAApBmC,WACFC,EAAY,GAElB,IAAK,IAAIC,KAAOF,EAAY,CACxB,IAAIvC,EAAIuC,EAAWE,GACnBD,EAAUrB,KAAKb,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAUkC,IAAKzC,EAAEsC,OACZhC,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,KAAYP,EAAEsB,MACdhB,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,KAAYP,EAAEoB,QAGtC,OACId,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,KACID,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAYuC,QAAQ,KAAKC,GAAG,cAA5B,aAGAzC,EAAAC,EAAAC,cAAA,OAAKwC,MAAO,CAACC,KAAM,cACnB3C,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAO4C,YAAY,SAASC,QAASjD,KAAKkD,aAAaC,KAAKnD,SAEhEG,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,KACID,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,KACID,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,KACID,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,aACAD,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,eAGRD,EAAAC,EAAAC,cAACiD,EAAAlD,EAAD,KACKiC,YAlCIkB,IAAM7B,sCCkFhB8B,6MAjFXC,MAAQ,CACJC,gBAAkB,MAGtBC,aAAe,SAACxB,GACZyB,EAAKC,SAAS,CACVH,gBAAiBvB,6EAIhB,IAAA2B,EAAA9D,KACED,EAAYC,KAAKC,MAAjBF,SAcDgE,EAAY,SAAChE,EAAUiE,EAAMC,GAC/B,OAAIlE,EAASmE,QAAQC,QAAUjD,SAAS+C,IAA0C,KAA9BlE,EAASmE,QAAQD,GAC1D,KACAD,IAASjE,EAASmE,QAAQD,GAC1B,CAACG,gBAAgB,WAEjB,CAACA,gBAAgB,YAsBhC,OAAIrE,GAAYA,EAASe,QAEjBX,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CACAC,mBAAmB,EACnBC,WAAYC,MACZC,SAAO,EACPpD,QAAStB,EAASe,QAClB4D,SAAU1E,KAAK2D,eAEfxD,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,KACID,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,KACID,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,KApDD,WACf,IAAIuE,EAAQ,GAEZ,IAAK,IAAIrC,KADTqC,EAAM3D,KAAKb,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,CAAWkC,IAAK,QAAhB,SACKwB,EAAKL,MAAMC,gBAAiB,CACxC,IAAIkB,EAAad,EAAKL,MAAMC,gBAAgBpB,GAAKrB,KAC7C4D,EAAaf,EAAKL,MAAMC,gBAAgBpB,GAAKnB,KACjDwD,EAAM3D,KAAKb,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,CAAWkC,IAAKsC,EAAW,SAAUA,EAAa,KAAOC,EAAa,WAGrF,OAAOF,EA4CcG,KAGT3E,EAAAC,EAAAC,cAACiD,EAAAlD,EAAD,KAlCG,WAEf,IAAI2E,EAAO,GACX,IAAK,IAAIC,KAAKjF,EAASG,MAAO,CAC1B,IAAIyE,EAAQ,GACRM,EAAWlF,EAASG,MAAM8E,GAE9B,IAAK,IAAIE,KADTP,EAAM3D,KAAKb,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,CAAWkC,IAAK2C,GAAWA,IACxBnB,EAAKL,MAAMC,gBAAiB,CACtC,IAAIkB,EAAad,EAAKL,MAAMC,gBAAgBwB,GAAGjE,KAC3CkE,EAAYrB,EAAKL,MAAMC,gBAAgBwB,GAAGE,MAAMJ,GAChDK,EAAStB,EAAUhE,EAAUoF,EAAWH,GAC5CL,EAAM3D,KAAKb,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,CAAWyC,MAAOwC,EAAQ/C,IAAKsC,EAAWO,GAAYA,IAErEJ,EAAK/D,KAAKb,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAUkC,IAAK2C,EAASD,GAAIL,IAE1C,OAAOI,EAoBUO,MAMrBnF,EAAAC,EAAAC,cAAA,mBA9EkBqB,oFCLpBL,EAAU,CACZ,OACA,OACA,aACA,eAiEWkE,6MA3Db9B,MAAQ,CACN+B,SAAU,QAGZC,YAAc,SAAAzD,GACZ4B,EAAKC,SAAS,CAAE2B,SAAUxD,EAAM0D,mBAGlCC,YAAc,SAAC3D,GACb4B,EAAKC,SAAS,CAAE2B,SAAU,OACM,KAA7BxD,EAAME,OAAO0D,aACZhC,EAAK3D,MAAM4F,QAAQ7D,EAAME,OAAO0D,gBAKtCjC,aAAe,SAACmC,EAAGC,6EAIV,IAAAjC,EAAA9D,KACCwF,EAAaxF,KAAKyD,MAAlB+B,SACFQ,EAAOC,QAAQT,GAErB,OACErF,EAAAC,EAAAC,cAAA,OAAK6F,UAAW,uBACd/F,EAAAC,EAAAC,cAAC8F,EAAA/F,EAAD,CACE8F,UAAW,YACXE,aAAW,OACXC,YAAWL,EAAO,iBAAcM,EAChCC,gBAAc,OACdC,QAASxG,KAAKyF,aAEdtF,EAAAC,EAAAC,cAACoG,EAAArG,EAAD,OAEFD,EAAAC,EAAAC,cAACqG,EAAAtG,EAAD,CACEwC,GAAG,YACH4C,SAAUA,EACVQ,KAAMA,EACNW,QAAS3G,KAAK2F,YACdjB,SAAU1E,KAAK2D,aACfiD,WAAY,CACV/D,MAAO,CACLgE,UAAWC,IACXvG,MAAO,OAIVc,EAAQ0F,IAAI,SAAAC,GAAM,OACjB7G,EAAAC,EAAAC,cAAC4G,EAAA7G,EAAD,CAAUkC,IAAK0E,EAAQR,QAAS1C,EAAK6B,aAClCqB,cAnDMzD,IAAM7B,gCC8EZwF,6MA/EbzD,MAAQ,CACN1D,SAAU,GACVoH,iBAAkB,GAClBC,MAAO,KACPC,KAAM,UAGRxB,QAAU,SAAC1D,GACTyB,EAAKC,SAAS,CAACwD,KAAMlF,OAcvBmF,WAAa,WAEXC,OAAOC,KAAKC,OACTC,KAAK,CACJ9F,OAAQ+F,EAAO/F,OAEfC,cAAe8F,EAAO9F,gBAEvB+F,KAAK,WCzCL,IAAcC,ID2CVjE,EAAKkE,OC1CdP,OAAOC,KAAKC,OAAOM,KAAK,SAAU,KAAM,WACtCR,OAAOC,KAAKC,OAAOO,OAAOC,aAAaC,OACpCC,IAAI,CACHrG,cAAe6F,EAAO7F,cACtBsG,MAAO,aAERR,KACC,SAAAS,GACE,IACMtI,ENbT,SAAoBuI,GACvB,IAAIJ,EAASI,EACTpI,EAyBR,SAAyBA,GAErB,IADA,IAAIqI,EAAa,GACTvD,EAAI,EAAGA,EAAI9E,EAAMiE,OAAQa,IACzBA,EAAI,GAIRuD,EAAWvH,KAAKd,EAAM8E,IAI1B,OAAOuD,EApCKC,CAAgBN,EAAO,IAC/BhE,EAsCR,SAA2BA,GAGvB,IAFA,IAAIuE,EAAe,GAEXzD,EAAI,EAAGA,EAAId,EAAQC,OAAQa,IAC3BA,EAAI,GAKRyD,EAAazH,KAAKkD,EAAQc,IAG9B,OAAOyD,EAlDOC,CAAkBR,EAAO,IASvC,MANW,CACPhI,MAAOA,EACPgE,QAASA,EACTpD,QA+CR,SAA0BA,EAAS6H,GAC/B,IAAIvG,EAAa,GACbwG,EAAe,GACnB,IAAK,IAAIC,KAAa/H,EAAS,CAC3B,IAAIC,EAASD,EAAQ+H,GACrBD,EAAe,CAAExD,MAAO,GAAIjE,KAAO,GAEnC,IAAI,IAAI6D,EAAI,EAAGA,EAAIjE,EAAOoD,OAAQa,IACpB,IAANA,EACA4D,EAAa3H,KAAOF,EAAO,GACd,IAANiE,GACP4D,EAAazH,KAAOJ,EAAOiE,GAC3B4D,EAAaE,MAAQH,EAAcC,EAAazH,MAEhDyH,EAAaxD,MAAMpE,KAAKD,EAAOiE,IAGvC4D,EAAazG,MAAQ0G,EACrBD,EAAaG,MAAQH,EAAa3H,KAClCmB,EAAWpB,KAAK4H,GAIpB,OADAxG,EAAW4G,KAAK,SAAC5I,EAAE6I,GAAO,OAAOA,EAAE9H,KAAOf,EAAEe,OACrCiB,EA3EO8G,CAAiBhB,EAAOiB,MAAM,GAAIjF,EAAQC,SMSjCiF,CADJf,EAAShD,OAAO6C,SACQ,GACrCL,EAAS,CACP9H,cAGJ,SAAAsI,GACER,GAAS,EAAOQ,EAAShD,OAAO+B,gBD+BxCU,OAAS,SAACnH,EAAMyG,GACd,GAAIzG,EAAM,CACR,IAAMZ,EAAWY,EAAKZ,SACtB6D,EAAKC,SAAS,CAAE9D,aAChB6D,EAAKC,SAAS,CAACsD,iBAAkBpH,EAASe,UAC1C8C,EAAK3B,aAAa,SAElB2B,EAAKC,SAAS,CAAEuD,uFAhCPiC,GACX,IAAIC,EAAetJ,KAAKyD,MAAM1D,SAASe,QAAQyI,OAAO,SAAA1J,GAAM,OAAOA,EAAEoB,KAAKuI,cAAcC,SAASJ,EAAMG,iBACvGF,EAAeA,EAAaI,OAAO,EAAE,IACrC1J,KAAK6D,SAAS,CAACsD,iBAAkBmC,gDAKjC/B,OAAOC,KAAKO,KAAK,SAAU/H,KAAKsH,6CA6BhC,OACInH,EAAAC,EAAAC,cAAA,OAAK6F,UAAU,OACb/F,EAAAC,EAAAC,cAAA,UAAQ6F,UAAU,cAChB/F,EAAAC,EAAAC,cAACsJ,EAAD,CAAM9D,QAAS7F,KAAK6F,UACpB1F,EAAAC,EAAAC,cAAA,OAAK6F,UAAW,aAAhB,sBAEmB,SAApBlG,KAAKyD,MAAM4D,KACZlH,EAAAC,EAAAC,cAACuJ,EAAAxJ,EAAD,KACED,EAAAC,EAAAC,cAAA,oBAIA,KACmB,eAApBL,KAAKyD,MAAM4D,KACVlH,EAAAC,EAAAC,cAACuJ,EAAAxJ,EAAD,KACAD,EAAAC,EAAAC,cAACwJ,EAAD,CAAYzH,WAAYpC,KAAKyD,MAAM0D,iBAAkBlF,aAAcjC,KAAKiC,aAAakB,KAAKnD,SAExF,KACiB,SAApBA,KAAKyD,MAAM4D,KACZlH,EAAAC,EAAAC,cAACuJ,EAAAxJ,EAAD,KACAD,EAAAC,EAAAC,cAACyJ,EAAD,CAAS/J,SAAUC,KAAKyD,MAAM1D,YAE5B,KACmB,gBAApBC,KAAKyD,MAAM4D,KACZlH,EAAAC,EAAAC,cAACuJ,EAAAxJ,EAAD,KAAOD,EAAAC,EAAAC,cAAC0J,EAAD,CAAahK,SAAUC,KAAKyD,MAAM1D,YACvC,aA3EM2B,aEAEuE,QACW,cAA7BsB,OAAOyC,SAASC,UAEe,UAA7B1C,OAAOyC,SAASC,UAEhB1C,OAAOyC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjK,EAAAC,EAAAC,cAACgK,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9C,KAAK,SAAA+C,GACjCA,EAAaC","file":"static/js/main.03a9d766.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.216f54ec.svg\";","import React, { Component } from 'react';\r\nimport Chart from 'react-google-charts';\r\nimport { getWinsBarData } from \"../common/helper\";\r\n\r\nclass WinsBar extends Component {\r\n\r\n  render() {\r\n    const {bowlPool} = this.props\r\n    if (bowlPool.games) {\r\n      return <Chart\r\n            width={'500px'}\r\n            height={'1000px'}\r\n            chartType=\"BarChart\"\r\n            loader={<div>Loading Chart</div>}\r\n            data = {getWinsBarData(bowlPool)}\r\n            options={{\r\n                title: 'Wins by Player',\r\n                hAxis: {\r\n                title: 'Wins',\r\n                minValue: 0,\r\n                },\r\n                vAxis: {\r\n                title: 'Player Name',\r\n                },\r\n            }}\r\n      />\r\n    }\r\n    return (\r\n      <div></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WinsBar","export function parseSheet(sheet) {\r\n    var values = sheet;\r\n    var games = createGamesList(values[0]);\r\n    var winners = createWinnersList(values[3]);\r\n    var players = createPlayerList(values.slice(3), winners.length);\r\n\r\n    var bowl = {\r\n        games: games,\r\n        winners: winners,\r\n        players: players\r\n    };\r\n\r\n    return bowl;\r\n}\r\nexport function getWinsBarData(bowlPoolData) {\r\n    var winsBarData = [[\"Player\",\"Wins\"]];\r\n    for (var p in bowlPoolData.players) {\r\n        var player = bowlPoolData.players[p]\r\n        winsBarData.push([player.name,parseInt(player.wins)]);\r\n    }\r\n    return winsBarData;\r\n}\r\n\r\nexport function getMultiPlayerDate(bowlPoolData, players) {\r\n    \r\n} \r\n\r\nfunction createGamesList(games) {\r\n    var gamesArray = [];\r\n    for(var i = 0; i < games.length; i++) {\r\n        if (i < 2) {\r\n            // First Two values aren't games\r\n            continue;\r\n        }\r\n        gamesArray.push(games[i])\r\n        \r\n        \r\n    }\r\n    return gamesArray;\r\n}\r\n\r\nfunction createWinnersList(winners) {\r\n    var winnersArray = [];\r\n\r\n    for(var i = 0; i < winners.length; i++) {\r\n        if (i < 2) {\r\n            // First Two values aren't games\r\n            continue;\r\n        }\r\n        \r\n        winnersArray.push(winners[i])\r\n        \r\n    }\r\n    return winnersArray;\r\n}\r\n\r\nfunction createPlayerList(players, gamesPlayed) {\r\n    var playerList = [];\r\n    var playerObject = {};\r\n    for (var playerNum in players) {\r\n        var player = players[playerNum];\r\n        playerObject = { picks: [], wins : 0};\r\n        \r\n        for(var i = 0; i < player.length; i++) {\r\n            if (i === 0 ) {\r\n                playerObject.name = player[0];\r\n            } else if (i === 1) {\r\n                playerObject.wins = player[i];\r\n                playerObject.loses = gamesPlayed - playerObject.wins;\r\n            } else {\r\n                playerObject.picks.push(player[i]);\r\n            }\r\n        }\r\n        playerObject.value = playerNum;\r\n        playerObject.label = playerObject.name;\r\n        playerList.push(playerObject);\r\n    }\r\n\r\n    playerList.sort((a,b) => {return b.wins - a.wins;})\r\n    return playerList;\r\n}\r\n\r\n","export default {\r\n    apiKey: \"AIzaSyB8-wy0DJ-w95vCGoMbEbpn0jVmX4IxHoQ\",\r\n    discoveryDocs: \r\n      [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"],\r\n    spreadsheetId: \"12K-dZ5_FnyVbcPrqWmjDDBodOyKIJ1Zi_EOaXCTz2G0\"\r\n  };","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Input from '@material-ui/core/Input';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n  \r\n\r\nclass PlayerList extends React.Component {\r\n    handleSearch(event) {\r\n        this.props.playerSearch(event.target.value);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { playerList } = this.props;\r\n        const listItems = []\r\n        \r\n        for (var key in playerList) {\r\n            var p = playerList[key];\r\n            listItems.push(<TableRow key={p.value}>\r\n                                <TableCell>{p.wins}</TableCell>\r\n                                <TableCell>{p.name}</TableCell>\r\n                           </TableRow>)\r\n        }\r\n        return (\r\n            <div>\r\n            <Toolbar>          \r\n                <Typography variant=\"h6\" id=\"tableTitle\">\r\n                    Standings\r\n                </Typography>\r\n                <div style={{flex: '1 1 100%'}} />\r\n                <Input placeholder=\"search\" onKeyUp={this.handleSearch.bind(this)}/>\r\n            </Toolbar>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Wins</TableCell>\r\n                        <TableCell>Name</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {listItems}\r\n                </TableBody>\r\n            </Table>\r\n            </div>\r\n        )\r\n  }\r\n}\r\n\r\nexport default PlayerList","import React, { Component } from 'react';\r\nimport Chart from 'react-google-charts';\r\nimport { getMultiPlayerData } from \"../common/helper\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Select from 'react-select'\r\nimport makeAnimated from 'react-select/lib/animated';\r\n\r\nclass MultiPlayer extends Component {\r\n\r\n    state = {\r\n        selectedPlayers : []\r\n    }\r\n\r\n    handleChange = (value) => {\r\n        this.setState({\r\n            selectedPlayers: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {bowlPool} = this.props\r\n\r\n        const getHeadRow = () => {\r\n            var cells = [];\r\n            cells.push(<TableCell key={\"Name\"}>Name</TableCell>);\r\n            for( var key in this.state.selectedPlayers) {\r\n                var playerName = this.state.selectedPlayers[key].name;\r\n                var playerWins = this.state.selectedPlayers[key].wins\r\n                cells.push(<TableCell key={playerName+\"-Name\"}>{playerName + \" (\" + playerWins + \" Wins)\"}</TableCell>)\r\n            }\r\n    \r\n            return cells;\r\n        }\r\n\r\n        const getResult = (bowlPool, pick, gameKey) => {\r\n            if (bowlPool.winners.length <= parseInt(gameKey) || bowlPool.winners[gameKey] === \"\") {\r\n                return null\r\n            } else if (pick === bowlPool.winners[gameKey]) {\r\n                return {backgroundColor:\"#1aff1a\"}\r\n            } else {\r\n                return {backgroundColor:\"#ff1a1a\"}\r\n            }\r\n        }\r\n\r\n        const getGameRows= () => {\r\n            \r\n            var rows = [];\r\n            for( var i in bowlPool.games) {\r\n                var cells = []\r\n                var gameName = bowlPool.games[i]\r\n                cells.push(<TableCell key={gameName}>{gameName}</TableCell>)\r\n                for( var j in this.state.selectedPlayers) {\r\n                    var playerName = this.state.selectedPlayers[j].name;\r\n                    var selection = this.state.selectedPlayers[j].picks[i];\r\n                    var result = getResult(bowlPool, selection, i)\r\n                    cells.push(<TableCell style={result} key={playerName+selection}>{selection}</TableCell>)\r\n                }\r\n                rows.push(<TableRow key={gameName+i}>{cells}</TableRow>)\r\n            }\r\n            return rows;\r\n        }\r\n\r\n        if (bowlPool && bowlPool.players) {\r\n            return (\r\n                <div>\r\n                    <Select\r\n                    closeMenuOnSelect={false}\r\n                    components={makeAnimated()}\r\n                    isMulti\r\n                    options={bowlPool.players}\r\n                    onChange={this.handleChange}\r\n                    />\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {getHeadRow()}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {getGameRows()}\r\n                        </TableBody>\r\n                    </Table>\r\n                </div>\r\n            )}\r\n        return (\r\n        <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MultiPlayer","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst options = [\r\n    'Home',\r\n    'Wins',\r\n    'PlayerList',\r\n    'MultiPlayer',\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nclass MyMenu extends React.Component {\r\n  state = {\r\n    anchorEl: null,\r\n  };\r\n\r\n  handleClick = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = (event) => {\r\n    this.setState({ anchorEl: null });\r\n    if(event.target.textContent !== \"\") {\r\n        this.props.setPage(event.target.textContent);\r\n    }\r\n    \r\n  };\r\n\r\n  handleChange = (e, v) => {\r\n    \r\n  }\r\n\r\n  render() {\r\n    const { anchorEl } = this.state;\r\n    const open = Boolean(anchorEl);\r\n\r\n    return (\r\n      <div className={\"main-menu-container\"}>\r\n        <IconButton\r\n          className={\"main-menu\"}\r\n          aria-label=\"More\"\r\n          aria-owns={open ? 'long-menu' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleClick}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"long-menu\"\r\n          anchorEl={anchorEl}\r\n          open={open}\r\n          onClose={this.handleClose}\r\n          onChange={this.handleChange}\r\n          PaperProps={{\r\n            style: {\r\n              maxHeight: ITEM_HEIGHT * 4.5,\r\n              width: 200,\r\n            },\r\n          }}\r\n        >\r\n          {options.map(option => (\r\n            <MenuItem key={option} onClick={this.handleClose}>\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyMenu;","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport WinsBar from './components/WinsBar';\r\nimport config from \"./common/api-config\";\r\nimport PlayerList from \"./components/PlayerList\";\r\nimport MultiPlayer from \"./components/MultiPlayer\"\r\nimport Menu from \"./components/Menu\"\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { load } from \"./common/spreadsheet\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    bowlPool: {},\r\n    searchPlayerList: [],\r\n    error: null,\r\n    page: \"Home\",\r\n  }\r\n\r\n  setPage = (value) => {\r\n    this.setState({page: value})\r\n  }\r\n\r\n  playerSearch(query) {\r\n    var foundPlayers = this.state.bowlPool.players.filter(p => {return p.name.toLowerCase().includes(query.toLowerCase());})\r\n    foundPlayers = foundPlayers.splice(0,10)\r\n    this.setState({searchPlayerList: foundPlayers});\r\n  }\r\n\r\n  componentDidMount() {\r\n    // 1. Load the JavaScript client library.\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    // 2. Initialize the JavaScript client library.\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        // Your API key will be automatically added to the Discovery Document URLs.\r\n        discoveryDocs: config.discoveryDocs\r\n      })\r\n      .then(() => {\r\n      // 3. Initialize and make the API request.\r\n      load(this.onLoad);\r\n    });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const bowlPool = data.bowlPool;\r\n      this.setState({ bowlPool });\r\n      this.setState({searchPlayerList: bowlPool.players});\r\n      this.playerSearch(\"\");\r\n    } else {\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <Menu setPage={this.setPage} />\r\n            <div className={\"site-name\"}>Bowl Pool Central</div>\r\n          </header>\r\n          {this.state.page === \"Home\" ?\r\n          <Paper>\r\n            <div>\r\n              Home\r\n            </div>\r\n          </Paper>\r\n          : null}\r\n          {this.state.page === \"PlayerList\" ?\r\n            <Paper>\r\n            <PlayerList playerList={this.state.searchPlayerList} playerSearch={this.playerSearch.bind(this)}/>\r\n            </Paper>\r\n            : null}\r\n          {this.state.page === \"Wins\" ?\r\n          <Paper>\r\n          <WinsBar bowlPool={this.state.bowlPool}/>\r\n          </Paper>\r\n          : null}\r\n          {this.state.page === \"MultiPlayer\" ?\r\n          <Paper><MultiPlayer bowlPool={this.state.bowlPool}/></Paper>\r\n          : null}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import config from \"./api-config\";\r\nimport { parseSheet } from \"./helper\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"A1:AZ100\"\r\n      })\r\n      .then(\r\n        response => {\r\n          const data = response.result.values;\r\n          const bowlPool = parseSheet(data) || [];\r\n          callback({\r\n            bowlPool\r\n          });\r\n        },\r\n        response => {\r\n          callback(false, response.result.error);\r\n        }\r\n      );\r\n  });\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}